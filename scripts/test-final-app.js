// Test final de l'application
const https = require('https');
const http = require('http');

async function testEndpoint(url) {
  return new Promise((resolve) => {
    const client = url.startsWith('https') ? https : http;
    
    const req = client.get(url, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      res.on('end', () => {
        resolve({
          statusCode: res.statusCode,
          data: data
        });
      });
    });
    
    req.on('error', (error) => {
      resolve({
        error: error.message
      });
    });
    
    req.setTimeout(10000, () => {
      req.destroy();
      resolve({
        error: 'Timeout'
      });
    });
  });
}

async function runFinalTest() {
  console.log('üéØ Test final de l\'application...\n');
  
  const baseUrl = 'http://localhost:3000';
  
  // Test 1: API de sant√©
  console.log('1Ô∏è‚É£ Test de l\'API de sant√©...');
  const healthResult = await testEndpoint(`${baseUrl}/api/health`);
  
  if (healthResult.error) {
    console.log(`‚ùå Erreur: ${healthResult.error}`);
  } else {
    console.log(`‚úÖ Status: ${healthResult.statusCode}`);
    if (healthResult.statusCode === 200) {
      console.log('‚úÖ API de sant√© fonctionne (base de donn√©es accessible)');
    } else {
      console.log(`‚ö†Ô∏è Status inattendu: ${healthResult.statusCode}`);
    }
  }
  
  // Test 2: Page d'accueil
  console.log('\n2Ô∏è‚É£ Test de la page d\'accueil...');
  const homeResult = await testEndpoint(`${baseUrl}/`);
  
  if (homeResult.error) {
    console.log(`‚ùå Erreur: ${homeResult.error}`);
  } else {
    console.log(`‚úÖ Status: ${homeResult.statusCode}`);
    if (homeResult.statusCode === 200) {
      console.log('‚úÖ Page d\'accueil accessible');
      
      // V√©rifier le contenu
      if (homeResult.data.includes('Dalon974')) {
        console.log('‚úÖ Logo Dalon974 pr√©sent');
      } else {
        console.log('‚ö†Ô∏è Logo Dalon974 non trouv√©');
      }
      
      if (homeResult.data.includes('Que souhaitez-vous rechercher')) {
        console.log('‚úÖ Contenu de la page d\'accueil pr√©sent');
      } else {
        console.log('‚ö†Ô∏è Contenu de la page d\'accueil non trouv√©');
      }
      
      if (homeResult.data.includes('header')) {
        console.log('‚úÖ Navbar pr√©sente');
      } else {
        console.log('‚ö†Ô∏è Navbar non trouv√©e');
      }
      
      if (homeResult.data.includes('Je cherche une colocation')) {
        console.log('‚úÖ Boutons de recherche pr√©sents');
      } else {
        console.log('‚ö†Ô∏è Boutons de recherche non trouv√©s');
      }
    } else {
      console.log(`‚ùå Status inattendu: ${homeResult.statusCode}`);
    }
  }
  
  // Test 3: Page de maintenance (doit √™tre accessible)
  console.log('\n3Ô∏è‚É£ Test de la page de maintenance...');
  const maintenanceResult = await testEndpoint(`${baseUrl}/maintenance`);
  
  if (maintenanceResult.error) {
    console.log(`‚ùå Erreur: ${maintenanceResult.error}`);
  } else {
    console.log(`‚úÖ Status: ${maintenanceResult.statusCode}`);
    if (maintenanceResult.statusCode === 200) {
      console.log('‚úÖ Page de maintenance accessible');
    } else {
      console.log(`‚ö†Ô∏è Status inattendu: ${maintenanceResult.statusCode}`);
    }
  }
  
  // Test 4: Page admin (doit √™tre accessible)
  console.log('\n4Ô∏è‚É£ Test de la page admin...');
  const adminResult = await testEndpoint(`${baseUrl}/admin`);
  
  if (adminResult.error) {
    console.log(`‚ùå Erreur: ${adminResult.error}`);
  } else {
    console.log(`‚úÖ Status: ${adminResult.statusCode}`);
    if (adminResult.statusCode === 200) {
      console.log('‚úÖ Page admin accessible');
    } else if (adminResult.statusCode === 302) {
      console.log('‚úÖ Redirection vers login (normal si non connect√©)');
    } else {
      console.log(`‚ö†Ô∏è Status inattendu: ${adminResult.statusCode}`);
    }
  }
  
  // R√©sum√© final
  console.log('\nüéâ R√©sum√© du test final:');
  console.log(`API de sant√©: ${healthResult.statusCode === 200 ? '‚úÖ OK' : '‚ùå Probl√®me'}`);
  console.log(`Page d'accueil: ${homeResult.statusCode === 200 ? '‚úÖ OK' : '‚ùå Probl√®me'}`);
  console.log(`Page de maintenance: ${maintenanceResult.statusCode === 200 ? '‚úÖ OK' : '‚ùå Probl√®me'}`);
  console.log(`Page admin: ${adminResult.statusCode === 200 || adminResult.statusCode === 302 ? '‚úÖ OK' : '‚ùå Probl√®me'}`);
  
  if (healthResult.statusCode === 200 && 
      homeResult.statusCode === 200 && 
      maintenanceResult.statusCode === 200) {
    console.log('\nüéä SUCC√àS: L\'application fonctionne parfaitement !');
    console.log('‚úÖ Base de donn√©es accessible');
    console.log('‚úÖ Page d\'accueil avec navbar fonctionnelle');
    console.log('‚úÖ Syst√®me de maintenance op√©rationnel');
    console.log('‚úÖ Tous les composants sont pr√©sents et fonctionnels');
  } else {
    console.log('\n‚ö†Ô∏è ATTENTION: Certains tests ont √©chou√©.');
  }
}

runFinalTest().catch(console.error);
