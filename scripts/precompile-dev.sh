#!/bin/bash

# Script de pr√©compilation pour l'environnement de d√©veloppement
# Ce script pr√©compile toutes les pages et optimise l'environnement de d√©veloppement

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Pr√©compilation de l'environnement de d√©veloppement RodColoc${NC}"
echo -e "${BLUE}============================================================${NC}"

# Aller dans le r√©pertoire de d√©veloppement
cd /data/rodcoloc/dev

# V√©rifier que nous sommes dans le bon r√©pertoire
if [ ! -f "package.json" ]; then
    echo -e "${RED}‚ùå Erreur: package.json non trouv√© dans /data/rodcoloc/dev${NC}"
    exit 1
fi

echo -e "${YELLOW}üìÅ R√©pertoire de travail: $(pwd)${NC}"
echo ""

# 1. Nettoyer le cache Next.js
echo -e "${YELLOW}üßπ Nettoyage du cache Next.js...${NC}"
if [ -d ".next" ]; then
    rm -rf .next
    echo -e "${GREEN}‚úÖ Cache Next.js supprim√©${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Aucun cache Next.js trouv√©${NC}"
fi

# 2. Nettoyer les fichiers de verrouillage
echo -e "${YELLOW}üîì Nettoyage des fichiers de verrouillage...${NC}"
if [ -f ".next.lock" ]; then
    rm -f .next.lock
    echo -e "${GREEN}‚úÖ Fichier .next.lock supprim√©${NC}"
fi

# 3. V√©rifier et installer les d√©pendances
echo -e "${YELLOW}üì¶ V√©rification des d√©pendances...${NC}"
if [ ! -d "node_modules" ]; then
    echo -e "${YELLOW}üì• Installation des d√©pendances...${NC}"
    npm install --legacy-peer-deps
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}‚úÖ D√©pendances install√©es${NC}"
    else
        echo -e "${RED}‚ùå Erreur lors de l'installation des d√©pendances${NC}"
        exit 1
    fi
else
    echo -e "${GREEN}‚úÖ D√©pendances d√©j√† install√©es${NC}"
fi

# 4. G√©n√©rer les types Prisma
echo -e "${YELLOW}üîß G√©n√©ration des types Prisma...${NC}"
npx prisma generate --no-hints
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Types Prisma g√©n√©r√©s${NC}"
else
    echo -e "${RED}‚ùå Erreur lors de la g√©n√©ration des types Prisma${NC}"
    exit 1
fi

# 5. V√©rifier la configuration de la base de donn√©es
echo -e "${YELLOW}üóÑÔ∏è  V√©rification de la base de donn√©es...${NC}"
npx prisma db push --accept-data-loss --no-hints
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Base de donn√©es synchronis√©e${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Avertissement: Probl√®me de synchronisation de la base de donn√©es${NC}"
fi

# 6. Pr√©compiler les pages
echo -e "${YELLOW}‚ö° Pr√©compilation des pages...${NC}"
npm run build
if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Pages pr√©compil√©es avec succ√®s${NC}"
else
    echo -e "${RED}‚ùå Erreur lors de la pr√©compilation${NC}"
    exit 1
fi

# 7. V√©rifier la taille du build
echo -e "${YELLOW}üìä Informations sur le build...${NC}"
if [ -d ".next" ]; then
    BUILD_SIZE=$(du -sh .next | cut -f1)
    echo -e "${GREEN}‚úÖ Taille du build: $BUILD_SIZE${NC}"
    
    # Compter les pages g√©n√©r√©es
    PAGE_COUNT=$(find .next/server/pages -name "*.js" 2>/dev/null | wc -l)
    echo -e "${GREEN}‚úÖ Pages g√©n√©r√©es: $PAGE_COUNT${NC}"
else
    echo -e "${RED}‚ùå Dossier .next non trouv√©${NC}"
fi

echo ""
echo -e "${BLUE}============================================================${NC}"
echo -e "${GREEN}üéâ Pr√©compilation termin√©e avec succ√®s !${NC}"
echo -e "${GREEN}üí° Vous pouvez maintenant d√©marrer le serveur avec: npm run dev${NC}"
echo -e "${BLUE}============================================================${NC}"
