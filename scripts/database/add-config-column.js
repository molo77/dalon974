const { PrismaClient } = require('@prisma/client');
const path = require('path');
const fs = require('fs');

// Charger les variables d'environnement depuis .env.local
const envPath = path.join(__dirname, '..', '.env.local');
if (fs.existsSync(envPath)) {
  const envContent = fs.readFileSync(envPath, 'utf8');
  envContent.split('\n').forEach(line => {
    const [key, ...valueParts] = line.split('=');
    if (key && valueParts.length > 0) {
      const value = valueParts.join('=').trim();
      if (!value.startsWith('#')) {
        process.env[key.trim()] = value.replace(/^["']|["']$/g, '');
      }
    }
  });
  console.log('‚úÖ Variables d\'environnement charg√©es depuis .env.local');
} else {
  console.log('‚ö†Ô∏è Fichier .env.local non trouv√©');
}

const prisma = new PrismaClient();

async function addConfigColumn() {
  console.log('üîß Ajout de la colonne config √† ScraperRun...\n');
  
  try {
    // V√©rifier la connexion √† la base de donn√©es
    console.log('üìä Test de connexion √† la base de donn√©es...');
    await prisma.$queryRaw`SELECT 1`;
    console.log('‚úÖ Connexion √† la base de donn√©es r√©ussie');
    
    // V√©rifier si la colonne config existe d√©j√†
    console.log('\nüîç V√©rification de la colonne config...');
    
    try {
      // Test pour voir si la colonne config existe
      await prisma.$queryRaw`SELECT config FROM ScraperRun LIMIT 1`;
      console.log('‚úÖ Colonne config existe d√©j√†');
    } catch (e) {
      console.log('‚ùå Colonne config manquante - ajout en cours...');
      
      // Ajouter la colonne config
      try {
        await prisma.$executeRawUnsafe('ALTER TABLE ScraperRun ADD COLUMN config JSON');
        console.log('‚úÖ Colonne config ajout√©e avec succ√®s');
      } catch (e) {
        console.log(`‚ö†Ô∏è Erreur lors de l'ajout de la colonne config: ${e.message}`);
      }
    }
    
    console.log('\n‚úÖ Op√©ration termin√©e !');
    console.log('üí° La colonne config devrait maintenant √™tre disponible dans ScraperRun');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'op√©ration:', error);
  } finally {
    await prisma.$disconnect();
  }
}

addConfigColumn();
